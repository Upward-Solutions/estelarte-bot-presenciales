name: CI/CD Workflow

on:
  push:
    branches:
      - master

jobs:
  e2e_test:
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U postgres -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -U postgres -d testdb; do
            echo "Esperando a que la base de datos estÃ© lista..."
            sleep 1
          done
          echo "Base de datos lista."

      - name: Reset Database
        run: |
          psql -h localhost -U postgres -d testdb -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"
        env:
          PGPASSWORD: postgres

      - name: Set up Database URL
        run: echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/testdb" > .env

      - name: Run Tests
        run: |
          source .venv/bin/activate
          pytest --disable-warnings

  deploy:
    runs-on: ubuntu-24.04
    needs: e2e_test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy application to VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@62.72.8.249 << 'EOF'
            mkdir -p ~/app && cd ~/app
            docker-compose down || true
            rm -rf *
            exit
          EOF

      - name: Copy project files
        run: |
          scp -o StrictHostKeyChecking=no